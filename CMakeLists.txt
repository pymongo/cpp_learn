cmake_minimum_required(VERSION 3.16)
project(cpp_learn)
set(CMAKE_CXX_STANDARD 17)

#通过`brew install boost`或`sudo apt install libboost-all-dev`安装的boost会自动安装到include_path和link_path中
#include_directories(/usr/include/boost)
#link_directories(/usr/lib/arm-linux-gnueabihf)
find_package(Boost)
include_directories(${Boost_INCLUDE_DIRS})

add_executable(boost_example_random boost_example_random.cpp)
target_link_libraries(boost_example_random ${Boost_LIBRARIES})
add_executable(stdin_c stdin.c)
add_executable(stdin_cpp stdin.cpp)
add_executable(file_input_stream file_input_stream.cpp)
add_executable(size_of_integer size_of_integer.cpp)
add_executable(return_value_of_printf return_value_of_printf.c)
add_executable(thread_run_interval_print_time thread_run_interval_print_time.cpp)
add_executable(impl_strcpy impl_strcpy.cpp)
add_executable(polymorphism polymorphism.cpp)
add_executable(operator_overload operator_overload.cpp)
# leetcode
add_executable(n_ary_tree_level_order leetcode/bfs/n_ary_tree_level_order.cpp)
add_executable(keys_and_rooms leetcode/bfs/keys_and_rooms.cpp)
add_executable(combinations leetcode/backtracking/combinations.cpp)
add_executable(transpose_matrix leetcode/easy/transpose_matrix.cpp)
add_executable(reverse_words_in_a_string_3 leetcode/easy/reverse_words_in_a_string_3.cpp)
add_executable(remove_duplicates_from_sorted_list leetcode/linked_list/remove_duplicates_from_sorted_list.cpp)
add_executable(dining_philosophers_problem leetcode/concurrency/dining_philosophers_problem.cpp)
add_executable(add_bigint_string leetcode/easy/add_bigint_string.cpp)
# system_call
add_executable(fork_child_process_and_wait system_call/fork_child_process_and_wait)
